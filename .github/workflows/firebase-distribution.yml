name: Android CI/CD with Firebase App Distribution

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'zulu'

      - name: Create google-services.json
        run: |
          echo '${{ secrets.GOOGLE_SERVICES_JSON }}' > $GITHUB_WORKSPACE/app/google-services.json

      - name: Validate versionCode and versionName
        run: |
          versionCode=$(grep 'versionCode' app/build.gradle.kts | grep -o '[0-9]\+')
          versionName=$(grep 'versionName' app/build.gradle.kts | grep -o '[0-9]\+\.[0-9]\+\.[0-9]\+')
          
          echo "Extracted versionCode: $versionCode"
          echo "Extracted versionName: $versionName"
          
          if [ -z "$versionCode" ] || [ -z "$versionName" ]; then
            echo "versionCode or versionName is missing or not updated."
            exit 1
          fi

          # Check if versionCode and versionName are different from the previous commit
          git fetch origin develop
          previousVersionCode=$(git show origin/develop:app/build.gradle.kts | grep 'versionCode' | grep -o '[0-9]\+')
          previousVersionName=$(git show origin/develop:app/build.gradle.kts | grep 'versionName' | grep -o '[0-9]\+\.[0-9]\+\.[0-9]\+')

          echo "Previous versionCode: $previousVersionCode"
          echo "Previous versionName: $previousVersionName"
          
          if [ "$versionCode" -le "$previousVersionCode" ] || [ "$versionName" == "$previousVersionName" ]; then
            echo "versionCode or versionName has not been updated."
            exit 1
          fi

      - name: Success
        run: echo "Version validation passed."

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}

      - name: Build APK (Release)
        run: ./gradlew assembleRelease

      - name: Sign APK
        run: |
          echo "${{ secrets.KEYSTORE }}" | base64 --decode > /tmp/keystore.jks
          ./gradlew assembleRelease \
            -Pandroid.injected.signing.store.file=/tmp/keystore.jks \
            -Pandroid.injected.signing.store.password=${{ secrets.KEYSTORE_PASSWORD }} \
            -Pandroid.injected.signing.key.alias=${{ secrets.KEY_ALIAS }} \
            -Pandroid.injected.signing.key.password=${{ secrets.KEY_PASSWORD }}

      - name: Upload APK to Firebase App Distribution
        run: ./gradlew appDistributionUploadRelease
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
